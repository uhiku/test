service: test-task

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-webpack
  - serverless-offline
  - serverless-dotenv-plugin
custom:
  webpack:
    includeModules:
      forceInclude:
        - moment
        - fluent-ffmpeg
  stage: ${opt:stage, self:provider.stage}
  origins:
    default: '*'

provider:
  name: aws
  runtime: nodejs12.x
  stage: dev
  region: eu-west-1
  environment:
    FFMPEG_PATH: /opt/ffmpeg/ffmpeg
    FFPROBE_PATH: /opt/ffmpeg/ffprobe
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:getObject
        - s3:putObject
        - s3:putBucketPolicy
        - s3:DeleteObject
        - s3:ListBucket
      Resource: '*'
layers:
  ffmpeg:
    path: layer

functions:
  trimSong:
    handler: src/song/song-trim/song-trim-lambda.main
    events:
      - s3:
          bucket: ${self:custom.stage}-mp3songs-attachments
          event: s3:ObjectCreated:*
          rules:
            - prefix: uploads/
            - suffix: .mp3
          existing: true
    layers:
      # Ref name is generated by TitleCasing the layer name & appending LambdaLayer
      - { Ref: FfmpegLambdaLayer }
  getSignedUrl:
    handler: src/song/signed-url/signed-url-lambda.main
    events:
      - http:
          path: upload-url
          method: get
  getAllSongs:
    handler: src/song/fetch-songs/fetch-songs-lambda.main
    events:
      - http:
          path: songs
          method: get

resources:
  # S3
  - ${file(resources/s3-bucket.yml)}
